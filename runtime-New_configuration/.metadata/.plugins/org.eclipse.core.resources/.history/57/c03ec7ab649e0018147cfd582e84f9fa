// ====================================================
// More Templates: https://www.ebenmonney.com/templates
// Email: support@ebenmonney.com
// ====================================================

using DAL.Models;
using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using DAL.Core;
using DAL.Core.Interfaces;

namespace DAL
{
    public interface IDatabaseInitializer
    {
        Task SeedAsync();
    }




    public class DatabaseInitializer : IDatabaseInitializer
    {
        private readonly ApplicationDbContext _context;
        private readonly IAccountManager _accountManager;
        private readonly ILogger _logger;

        public DatabaseInitializer(ApplicationDbContext context, IAccountManager accountManager, ILogger<DatabaseInitializer> logger)
        {
            _accountManager = accountManager;
            _context = context;
            _logger = logger;
        }

        public async Task SeedAsync()
        {
            await _context.Database.MigrateAsync().ConfigureAwait(false);

            if (!await _context.Users.AnyAsync())
            {
                _logger.LogInformation("Generating inbuilt accounts");

                const string adminRoleName = "administrator";
                const string userRoleName = "user";
                
                //________feito por mim
               	const string AU_ManagerRoleName = "au_manager";
              	//________

                await EnsureRoleAsync(adminRoleName, "Default administrator", ApplicationPermissions.GetAllPermissionValues());
                await EnsureRoleAsync(userRoleName, "Default user", new string[] { });
                
               	//________feito por mim
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 1
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 2
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 3
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 4
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 5
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 6
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 7
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 8
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 9
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 10
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 11
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 12
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 13
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 14
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 15
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 16
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 17
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 18
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 19
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 20
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 21
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 22
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 23
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 24
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 25
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 26
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 27
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 28
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 29
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 30
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 31
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 32
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 33
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 34
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 35
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 36
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 37
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 38
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 39
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 40
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 41
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 42
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 43
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 44
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 45
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 46
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 47
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 48
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 49
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 50
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 51
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 52
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 53
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 54
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 55
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 56
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 57
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 58
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 59
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 60
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 61
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 62
@@@@@@@@@@@@@@@@@@@@@@@@@_______doubleFOR actionsToBeUsedByActor.size 63
               	@@@@@@@@@@@@@@@@@@@@@@@@@_______actionsToBeUsedByActor.size 0
               	@@@@@@@@@@@@@@@@@@@@:AU_Manager
               	@@@@@@@@@@@@@@@@@@@@:[]
               	await EnsureRoleAsync(AU_ManagerRoleName, "Default AU_Manager", new string[] {  });
               	//________

                await CreateUserAsync("admin", "tempP@ss123", "Inbuilt Administrator", "admin@ebenmonney.com", "+1 (123) 000-0000", new string[] { adminRoleName });
                await CreateUserAsync("user", "tempP@ss123", "Inbuilt Standard User", "user@ebenmonney.com", "+1 (123) 000-0001", new string[] { userRoleName });

                _logger.LogInformation("Inbuilt account generation completed");
            }



            
        }



        private async Task EnsureRoleAsync(string roleName, string description, string[] claims)
        {
            if ((await _accountManager.GetRoleByNameAsync(roleName)) == null)
            {
                ApplicationRole applicationRole = new ApplicationRole(roleName, description);

                var result = await this._accountManager.CreateRoleAsync(applicationRole, claims);

                if (!result.Item1)
                    throw new Exception($"Seeding \"{description}\" role failed. Errors: {string.Join(Environment.NewLine, result.Item2)}");
            }
        }

        private async Task<ApplicationUser> CreateUserAsync(string userName, string password, string fullName, string email, string phoneNumber, string[] roles)
        {
            ApplicationUser applicationUser = new ApplicationUser
            {
                UserName = userName,
                FullName = fullName,
                Email = email,
                PhoneNumber = phoneNumber,
                EmailConfirmed = true,
                IsEnabled = true
            };

            var result = await _accountManager.CreateUserAsync(applicationUser, roles, password);

            if (!result.Item1)
                throw new Exception($"Seeding \"{userName}\" user failed. Errors: {string.Join(Environment.NewLine, result.Item2)}");


            return applicationUser;
        }
    }
}

