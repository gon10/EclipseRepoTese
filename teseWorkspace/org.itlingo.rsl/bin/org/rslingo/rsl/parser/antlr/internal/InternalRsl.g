/*
 * generated by Xtext 2.10.0
 */
grammar InternalRsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.rslingo.rsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.rslingo.rsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.rslingo.rsl.services.RslGrammarAccess;

}

@parser::members {

 	private RslGrammarAccess grammarAccess;

    public InternalRslParser(TokenStream input, RslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected RslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getPackagesPackageAbstractParserRuleCall_0());
			}
			lv_packages_0_0=rulePackageAbstract
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"packages",
					lv_packages_0_0,
					"org.rslingo.rsl.Rsl.PackageAbstract");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRulePackageAbstract
entryRulePackageAbstract returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageAbstractRule()); }
	iv_rulePackageAbstract=rulePackageAbstract
	{ $current=$iv_rulePackageAbstract.current; }
	EOF;

// Rule PackageAbstract
rulePackageAbstract returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getPackageAbstractAccess().getPackageSystemParserRuleCall());
	}
	this_PackageSystem_0=rulePackageSystem
	{
		$current = $this_PackageSystem_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"org.rslingo.rsl.Rsl.QualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDoubleOrInt
entryRuleDoubleOrInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDoubleOrIntRule()); }
	iv_ruleDoubleOrInt=ruleDoubleOrInt
	{ $current=$iv_ruleDoubleOrInt.current.getText(); }
	EOF;

// Rule DoubleOrInt
ruleDoubleOrInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_DOUBLE_0=RULE_DOUBLE
		{
			$current.merge(this_DOUBLE_0);
		}
		{
			newLeafNode(this_DOUBLE_0, grammarAccess.getDoubleOrIntAccess().getDOUBLETerminalRuleCall_0());
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getDoubleOrIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleMonth
entryRuleMonth returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMonthRule()); }
	iv_ruleMonth=ruleMonth
	{ $current=$iv_ruleMonth.current; }
	EOF;

// Rule Month
ruleMonth returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_1='Jan'
				{
					newLeafNode(lv_value_0_1, grammarAccess.getMonthAccess().getValueJanKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonthRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_1, null);
				}
				    |
				lv_value_0_2='Feb'
				{
					newLeafNode(lv_value_0_2, grammarAccess.getMonthAccess().getValueFebKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonthRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_2, null);
				}
				    |
				lv_value_0_3='Mar'
				{
					newLeafNode(lv_value_0_3, grammarAccess.getMonthAccess().getValueMarKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonthRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_3, null);
				}
				    |
				lv_value_0_4='Apr'
				{
					newLeafNode(lv_value_0_4, grammarAccess.getMonthAccess().getValueAprKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonthRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_4, null);
				}
				    |
				lv_value_0_5='May'
				{
					newLeafNode(lv_value_0_5, grammarAccess.getMonthAccess().getValueMayKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonthRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_5, null);
				}
				    |
				lv_value_0_6='Jun'
				{
					newLeafNode(lv_value_0_6, grammarAccess.getMonthAccess().getValueJunKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonthRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_6, null);
				}
				    |
				lv_value_0_7='Jul'
				{
					newLeafNode(lv_value_0_7, grammarAccess.getMonthAccess().getValueJulKeyword_0_6());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonthRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_7, null);
				}
				    |
				lv_value_0_8='Aug'
				{
					newLeafNode(lv_value_0_8, grammarAccess.getMonthAccess().getValueAugKeyword_0_7());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonthRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_8, null);
				}
				    |
				lv_value_0_9='Sep'
				{
					newLeafNode(lv_value_0_9, grammarAccess.getMonthAccess().getValueSepKeyword_0_8());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonthRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_9, null);
				}
				    |
				lv_value_0_10='Oct'
				{
					newLeafNode(lv_value_0_10, grammarAccess.getMonthAccess().getValueOctKeyword_0_9());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonthRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_10, null);
				}
				    |
				lv_value_0_11='Nov'
				{
					newLeafNode(lv_value_0_11, grammarAccess.getMonthAccess().getValueNovKeyword_0_10());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonthRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_11, null);
				}
				    |
				lv_value_0_12='Dec'
				{
					newLeafNode(lv_value_0_12, grammarAccess.getMonthAccess().getValueDecKeyword_0_11());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonthRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_12, null);
				}
			)
		)
	)
;

// Entry rule entryRulePackageSystem
entryRulePackageSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageSystemRule()); }
	iv_rulePackageSystem=rulePackageSystem
	{ $current=$iv_rulePackageSystem.current; }
	EOF;

// Rule PackageSystem
rulePackageSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='package-system'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageSystemAccess().getPackageSystemKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageSystemAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageSystemRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.rslingo.rsl.Rsl.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageSystemAccess().getImportsImportParserRuleCall_2_0());
				}
				lv_imports_2_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageSystemRule());
					}
					add(
						$current,
						"imports",
						lv_imports_2_0,
						"org.rslingo.rsl.Rsl.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageSystemAccess().getSystemSystemParserRuleCall_3_0());
				}
				lv_system_3_0=ruleSystem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageSystemRule());
					}
					set(
						$current,
						"system",
						lv_system_3_0,
						"org.rslingo.rsl.Rsl.System");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageSystemAccess().getEntitiesDataEntityParserRuleCall_4_0());
				}
				lv_entities_4_0=ruleDataEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageSystemRule());
					}
					add(
						$current,
						"entities",
						lv_entities_4_0,
						"org.rslingo.rsl.Rsl.DataEntity");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageSystemAccess().getDataEntityViewsDataEntityViewParserRuleCall_5_0());
				}
				lv_dataEntityViews_5_0=ruleDataEntityView
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageSystemRule());
					}
					add(
						$current,
						"dataEntityViews",
						lv_dataEntityViews_5_0,
						"org.rslingo.rsl.Rsl.DataEntityView");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageSystemAccess().getActorsActorParserRuleCall_6_0());
				}
				lv_actors_6_0=ruleActor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageSystemRule());
					}
					add(
						$current,
						"actors",
						lv_actors_6_0,
						"org.rslingo.rsl.Rsl.Actor");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageSystemAccess().getRequirementsRequirementParserRuleCall_7_0());
				}
				lv_requirements_7_0=ruleRequirement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageSystemRule());
					}
					add(
						$current,
						"requirements",
						lv_requirements_7_0,
						"org.rslingo.rsl.Rsl.Requirement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageSystemAccess().getStateMachineStateMachineParserRuleCall_8_0());
				}
				lv_stateMachine_8_0=ruleStateMachine
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageSystemRule());
					}
					add(
						$current,
						"stateMachine",
						lv_stateMachine_8_0,
						"org.rslingo.rsl.Rsl.StateMachine");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageSystemAccess().getRequirementRelationsRequirementRelationParserRuleCall_9_0());
				}
				lv_requirementRelations_9_0=ruleRequirementRelation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageSystemRule());
					}
					add(
						$current,
						"requirementRelations",
						lv_requirementRelations_9_0,
						"org.rslingo.rsl.Rsl.RequirementRelation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleSystem
entryRuleSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemRule()); }
	iv_ruleSystem=ruleSystem
	{ $current=$iv_ruleSystem.current; }
	EOF;

// Rule System
ruleSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemAccess().getSystemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSystemAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getSystemAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getTypeSystemTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleSystemType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.rslingo.rsl.Rsl.SystemType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getSystemAccess().getLeftSquareBracketKeyword_4());
		}
		(
			otherlv_5='name'
			{
				newLeafNode(otherlv_5, grammarAccess.getSystemAccess().getNameKeyword_5_0());
			}
			(
				(
					lv_nameAlias_6_0=RULE_STRING
					{
						newLeafNode(lv_nameAlias_6_0, grammarAccess.getSystemAccess().getNameAliasSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSystemRule());
						}
						setWithLastConsumed(
							$current,
							"nameAlias",
							lv_nameAlias_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		otherlv_7='scope'
		{
			newLeafNode(otherlv_7, grammarAccess.getSystemAccess().getScopeKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getScopeSystemScopeEnumRuleCall_7_0());
				}
				lv_scope_8_0=ruleSystemScope
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					set(
						$current,
						"scope",
						lv_scope_8_0,
						"org.rslingo.rsl.Rsl.SystemScope");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_9='subSystems'
			{
				newLeafNode(otherlv_9, grammarAccess.getSystemAccess().getSubSystemsKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSystemAccess().getSubSystemsRefSystemParserRuleCall_8_1_0());
					}
					lv_subSystems_10_0=ruleRefSystem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSystemRule());
						}
						set(
							$current,
							"subSystems",
							lv_subSystems_10_0,
							"org.rslingo.rsl.Rsl.RefSystem");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_11='reusableSystems'
			{
				newLeafNode(otherlv_11, grammarAccess.getSystemAccess().getReusableSystemsKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSystemAccess().getReusableSystemsRefSystemParserRuleCall_9_1_0());
					}
					lv_reusableSystems_12_0=ruleRefSystem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSystemRule());
						}
						set(
							$current,
							"reusableSystems",
							lv_reusableSystems_12_0,
							"org.rslingo.rsl.Rsl.RefSystem");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_13='description'
			{
				newLeafNode(otherlv_13, grammarAccess.getSystemAccess().getDescriptionKeyword_10_0());
			}
			(
				(
					lv_description_14_0=RULE_STRING
					{
						newLeafNode(lv_description_14_0, grammarAccess.getSystemAccess().getDescriptionSTRINGTerminalRuleCall_10_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSystemRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_14_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_15=']'
		{
			newLeafNode(otherlv_15, grammarAccess.getSystemAccess().getRightSquareBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleRefSystem
entryRuleRefSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefSystemRule()); }
	iv_ruleRefSystem=ruleRefSystem
	{ $current=$iv_ruleRefSystem.current; }
	EOF;

// Rule RefSystem
ruleRefSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRefSystemRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getRefSystemAccess().getRefsSystemCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getRefSystemAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRefSystemRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getRefSystemAccess().getRefsSystemCrossReference_1_1_0());
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDataEntity
entryRuleDataEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataEntityRule()); }
	iv_ruleDataEntity=ruleDataEntity
	{ $current=$iv_ruleDataEntity.current; }
	EOF;

// Rule DataEntity
ruleDataEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='dataEntity'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataEntityAccess().getDataEntityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataEntityAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataEntityAccess().getTypeDataEntityTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleDataEntityType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataEntityRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.rslingo.rsl.Rsl.DataEntityType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getDataEntityAccess().getColonKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataEntityAccess().getSubTypeDataEntitySubTypeEnumRuleCall_4_1_0());
					}
					lv_subType_5_0=ruleDataEntitySubType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataEntityRule());
						}
						set(
							$current,
							"subType",
							lv_subType_5_0,
							"org.rslingo.rsl.Rsl.DataEntitySubType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='['
		{
			newLeafNode(otherlv_6, grammarAccess.getDataEntityAccess().getLeftSquareBracketKeyword_5());
		}
		(
			otherlv_7='name'
			{
				newLeafNode(otherlv_7, grammarAccess.getDataEntityAccess().getNameKeyword_6_0());
			}
			(
				(
					lv_nameAlias_8_0=RULE_STRING
					{
						newLeafNode(lv_nameAlias_8_0, grammarAccess.getDataEntityAccess().getNameAliasSTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataEntityRule());
						}
						setWithLastConsumed(
							$current,
							"nameAlias",
							lv_nameAlias_8_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		(
			otherlv_9='isA'
			{
				newLeafNode(otherlv_9, grammarAccess.getDataEntityAccess().getIsAKeyword_7_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataEntityRule());
						}
					}
					otherlv_10=RULE_ID
					{
						newLeafNode(otherlv_10, grammarAccess.getDataEntityAccess().getSuperDataEntityCrossReference_7_1_0());
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDataEntityAccess().getAttributesAttributeParserRuleCall_8_0());
				}
				lv_attributes_11_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataEntityRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_11_0,
						"org.rslingo.rsl.Rsl.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getDataEntityAccess().getPrimaryKeyPrimaryKeyParserRuleCall_9_0());
				}
				lv_primaryKey_12_0=rulePrimaryKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataEntityRule());
					}
					set(
						$current,
						"primaryKey",
						lv_primaryKey_12_0,
						"org.rslingo.rsl.Rsl.PrimaryKey");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDataEntityAccess().getForeignKeysForeignKeyParserRuleCall_10_0());
				}
				lv_foreignKeys_13_0=ruleForeignKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataEntityRule());
					}
					add(
						$current,
						"foreignKeys",
						lv_foreignKeys_13_0,
						"org.rslingo.rsl.Rsl.ForeignKey");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDataEntityAccess().getChecksCheckParserRuleCall_11_0());
				}
				lv_checks_14_0=ruleCheck
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataEntityRule());
					}
					add(
						$current,
						"checks",
						lv_checks_14_0,
						"org.rslingo.rsl.Rsl.Check");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_15='description'
			{
				newLeafNode(otherlv_15, grammarAccess.getDataEntityAccess().getDescriptionKeyword_12_0());
			}
			(
				(
					lv_description_16_0=RULE_STRING
					{
						newLeafNode(lv_description_16_0, grammarAccess.getDataEntityAccess().getDescriptionSTRINGTerminalRuleCall_12_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataEntityRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_16_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_17=']'
		{
			newLeafNode(otherlv_17, grammarAccess.getDataEntityAccess().getRightSquareBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='attribute'
		{
			newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getAttributeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getTypeAttributeTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleAttributeType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.rslingo.rsl.Rsl.AttributeType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getAttributeAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getSizeDoubleOrIntParserRuleCall_4_1_0());
					}
					lv_size_5_0=ruleDoubleOrInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"size",
							lv_size_5_0,
							"org.rslingo.rsl.Rsl.DoubleOrInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getAttributeAccess().getRightParenthesisKeyword_4_2());
			}
		)?
		otherlv_7='['
		{
			newLeafNode(otherlv_7, grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_5());
		}
		(
			otherlv_8='name'
			{
				newLeafNode(otherlv_8, grammarAccess.getAttributeAccess().getNameKeyword_6_0());
			}
			(
				(
					lv_nameAlias_9_0=RULE_STRING
					{
						newLeafNode(lv_nameAlias_9_0, grammarAccess.getAttributeAccess().getNameAliasSTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeRule());
						}
						setWithLastConsumed(
							$current,
							"nameAlias",
							lv_nameAlias_9_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		(
			otherlv_10='multiplicity'
			{
				newLeafNode(otherlv_10, grammarAccess.getAttributeAccess().getMultiplicityKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getMultiplicityMultiplicityParserRuleCall_7_1_0());
					}
					lv_multiplicity_11_0=ruleMultiplicity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"multiplicity",
							lv_multiplicity_11_0,
							"org.rslingo.rsl.Rsl.Multiplicity");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_12='defaultValue'
			{
				newLeafNode(otherlv_12, grammarAccess.getAttributeAccess().getDefaultValueKeyword_8_0());
			}
			(
				(
					lv_defaultValue_13_0=RULE_STRING
					{
						newLeafNode(lv_defaultValue_13_0, grammarAccess.getAttributeAccess().getDefaultValueSTRINGTerminalRuleCall_8_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeRule());
						}
						setWithLastConsumed(
							$current,
							"defaultValue",
							lv_defaultValue_13_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_14='values'
			{
				newLeafNode(otherlv_14, grammarAccess.getAttributeAccess().getValuesKeyword_9_0());
			}
			(
				(
					lv_values_15_0=RULE_STRING
					{
						newLeafNode(lv_values_15_0, grammarAccess.getAttributeAccess().getValuesSTRINGTerminalRuleCall_9_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeRule());
						}
						setWithLastConsumed(
							$current,
							"values",
							lv_values_15_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				lv_notNull_16_0='NotNull'
				{
					newLeafNode(lv_notNull_16_0, grammarAccess.getAttributeAccess().getNotNullNotNullKeyword_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed($current, "notNull", lv_notNull_16_0, "NotNull");
				}
			)
		)?
		(
			(
				lv_unique_17_0='Unique'
				{
					newLeafNode(lv_unique_17_0, grammarAccess.getAttributeAccess().getUniqueUniqueKeyword_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed($current, "unique", lv_unique_17_0, "Unique");
				}
			)
		)?
		(
			otherlv_18='description'
			{
				newLeafNode(otherlv_18, grammarAccess.getAttributeAccess().getDescriptionKeyword_12_0());
			}
			(
				(
					lv_description_19_0=RULE_STRING
					{
						newLeafNode(lv_description_19_0, grammarAccess.getAttributeAccess().getDescriptionSTRINGTerminalRuleCall_12_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_19_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_20=']'
		{
			newLeafNode(otherlv_20, grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleMultiplicity
entryRuleMultiplicity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicityRule()); }
	iv_ruleMultiplicity=ruleMultiplicity
	{ $current=$iv_ruleMultiplicity.current; }
	EOF;

// Rule Multiplicity
ruleMultiplicity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_1='"0"'
				{
					newLeafNode(lv_value_0_1, grammarAccess.getMultiplicityAccess().getValue0Keyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultiplicityRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_1, null);
				}
				    |
				lv_value_0_2='"1"'
				{
					newLeafNode(lv_value_0_2, grammarAccess.getMultiplicityAccess().getValue1Keyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultiplicityRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_2, null);
				}
				    |
				lv_value_0_3='"0..1"'
				{
					newLeafNode(lv_value_0_3, grammarAccess.getMultiplicityAccess().getValue01Keyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultiplicityRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_3, null);
				}
				    |
				lv_value_0_4='"*"'
				{
					newLeafNode(lv_value_0_4, grammarAccess.getMultiplicityAccess().getValueQuotationMarkAsteriskQuotationMarkKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultiplicityRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_4, null);
				}
				    |
				lv_value_0_5=RULE_STRING
				{
					newLeafNode(lv_value_0_5, grammarAccess.getMultiplicityAccess().getValueSTRINGTerminalRuleCall_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultiplicityRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_5,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRulePrimaryKey
entryRulePrimaryKey returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryKeyRule()); }
	iv_rulePrimaryKey=rulePrimaryKey
	{ $current=$iv_rulePrimaryKey.current; }
	EOF;

// Rule PrimaryKey
rulePrimaryKey returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='primaryKey'
		{
			newLeafNode(otherlv_0, grammarAccess.getPrimaryKeyAccess().getPrimaryKeyKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getPrimaryKeyAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimaryKeyAccess().getRefToRefAttributeParserRuleCall_2_0());
				}
				lv_refTo_2_0=ruleRefAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimaryKeyRule());
					}
					set(
						$current,
						"refTo",
						lv_refTo_2_0,
						"org.rslingo.rsl.Rsl.RefAttribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getPrimaryKeyAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleForeignKey
entryRuleForeignKey returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForeignKeyRule()); }
	iv_ruleForeignKey=ruleForeignKey
	{ $current=$iv_ruleForeignKey.current; }
	EOF;

// Rule ForeignKey
ruleForeignKey returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='foreignKey'
		{
			newLeafNode(otherlv_0, grammarAccess.getForeignKeyAccess().getForeignKeyKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForeignKeyRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getForeignKeyAccess().getFentityDataEntityCrossReference_1_0());
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getForeignKeyAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForeignKeyAccess().getRefToRefAttributeParserRuleCall_3_0());
				}
				lv_refTo_3_0=ruleRefAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForeignKeyRule());
					}
					set(
						$current,
						"refTo",
						lv_refTo_3_0,
						"org.rslingo.rsl.Rsl.RefAttribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getForeignKeyAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleRefAttribute
entryRuleRefAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefAttributeRule()); }
	iv_ruleRefAttribute=ruleRefAttribute
	{ $current=$iv_ruleRefAttribute.current; }
	EOF;

// Rule RefAttribute
ruleRefAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRefAttributeRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getRefAttributeAccess().getRefAttrAttributeCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getRefAttributeAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRefAttributeRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getRefAttributeAccess().getRefAttrAttributeCrossReference_1_1_0());
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCheck
entryRuleCheck returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCheckRule()); }
	iv_ruleCheck=ruleCheck
	{ $current=$iv_ruleCheck.current; }
	EOF;

// Rule Check
ruleCheck returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='check'
		{
			newLeafNode(otherlv_0, grammarAccess.getCheckAccess().getCheckKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCheckAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCheckRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_checkExpression_2_0=RULE_STRING
				{
					newLeafNode(lv_checkExpression_2_0, grammarAccess.getCheckAccess().getCheckExpressionSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCheckRule());
					}
					setWithLastConsumed(
						$current,
						"checkExpression",
						lv_checkExpression_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleDataEntityView
entryRuleDataEntityView returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataEntityViewRule()); }
	iv_ruleDataEntityView=ruleDataEntityView
	{ $current=$iv_ruleDataEntityView.current; }
	EOF;

// Rule DataEntityView
ruleDataEntityView returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='dataEntityView'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataEntityViewAccess().getDataEntityViewKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataEntityViewAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataEntityViewRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataEntityViewAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataEntityViewAccess().getTypeDataEntityViewTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleDataEntityViewType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataEntityViewRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.rslingo.rsl.Rsl.DataEntityViewType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getDataEntityViewAccess().getLeftSquareBracketKeyword_4());
		}
		(
			otherlv_5='name'
			{
				newLeafNode(otherlv_5, grammarAccess.getDataEntityViewAccess().getNameKeyword_5_0());
			}
			(
				(
					lv_nameAlias_6_0=RULE_STRING
					{
						newLeafNode(lv_nameAlias_6_0, grammarAccess.getDataEntityViewAccess().getNameAliasSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataEntityViewRule());
						}
						setWithLastConsumed(
							$current,
							"nameAlias",
							lv_nameAlias_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDataEntityViewAccess().getMasterMasterDEntityParserRuleCall_6_0());
				}
				lv_master_7_0=ruleMasterDEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataEntityViewRule());
					}
					set(
						$current,
						"master",
						lv_master_7_0,
						"org.rslingo.rsl.Rsl.MasterDEntity");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDataEntityViewAccess().getDetailsDetailDEntityParserRuleCall_7_0());
				}
				lv_details_8_0=ruleDetailDEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataEntityViewRule());
					}
					add(
						$current,
						"details",
						lv_details_8_0,
						"org.rslingo.rsl.Rsl.DetailDEntity");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDataEntityViewAccess().getReferencesReferenceDEntityParserRuleCall_8_0());
				}
				lv_references_9_0=ruleReferenceDEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataEntityViewRule());
					}
					add(
						$current,
						"references",
						lv_references_9_0,
						"org.rslingo.rsl.Rsl.ReferenceDEntity");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_10='description'
			{
				newLeafNode(otherlv_10, grammarAccess.getDataEntityViewAccess().getDescriptionKeyword_9_0());
			}
			(
				(
					lv_description_11_0=RULE_STRING
					{
						newLeafNode(lv_description_11_0, grammarAccess.getDataEntityViewAccess().getDescriptionSTRINGTerminalRuleCall_9_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataEntityViewRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_11_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_12=']'
		{
			newLeafNode(otherlv_12, grammarAccess.getDataEntityViewAccess().getRightSquareBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleMasterDEntity
entryRuleMasterDEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMasterDEntityRule()); }
	iv_ruleMasterDEntity=ruleMasterDEntity
	{ $current=$iv_ruleMasterDEntity.current; }
	EOF;

// Rule MasterDEntity
ruleMasterDEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='master'
		{
			newLeafNode(otherlv_0, grammarAccess.getMasterDEntityAccess().getMasterKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMasterDEntityRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getMasterDEntityAccess().getMasterDEntityDataEntityCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDetailDEntity
entryRuleDetailDEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDetailDEntityRule()); }
	iv_ruleDetailDEntity=ruleDetailDEntity
	{ $current=$iv_ruleDetailDEntity.current; }
	EOF;

// Rule DetailDEntity
ruleDetailDEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='detail'
		{
			newLeafNode(otherlv_0, grammarAccess.getDetailDEntityAccess().getDetailKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDetailDEntityRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDetailDEntityAccess().getDEntityDetailDataEntityCrossReference_1_0());
				}
			)
		)
		(
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getDetailDEntityAccess().getLeftSquareBracketKeyword_2_0());
			}
			otherlv_3='reference'
			{
				newLeafNode(otherlv_3, grammarAccess.getDetailDEntityAccess().getReferenceKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDetailDEntityAccess().getRefDEntityRefDEntityParserRuleCall_2_2_0());
					}
					lv_refDEntity_4_0=ruleRefDEntity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDetailDEntityRule());
						}
						set(
							$current,
							"refDEntity",
							lv_refDEntity_4_0,
							"org.rslingo.rsl.Rsl.RefDEntity");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getDetailDEntityAccess().getRightSquareBracketKeyword_2_3());
			}
		)?
	)
;

// Entry rule entryRuleReferenceDEntity
entryRuleReferenceDEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceDEntityRule()); }
	iv_ruleReferenceDEntity=ruleReferenceDEntity
	{ $current=$iv_ruleReferenceDEntity.current; }
	EOF;

// Rule ReferenceDEntity
ruleReferenceDEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='reference'
		{
			newLeafNode(otherlv_0, grammarAccess.getReferenceDEntityAccess().getReferenceKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceDEntityAccess().getRefDEntityRefDEntityParserRuleCall_1_0());
				}
				lv_refDEntity_1_0=ruleRefDEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceDEntityRule());
					}
					set(
						$current,
						"refDEntity",
						lv_refDEntity_1_0,
						"org.rslingo.rsl.Rsl.RefDEntity");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRefDEntity
entryRuleRefDEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefDEntityRule()); }
	iv_ruleRefDEntity=ruleRefDEntity
	{ $current=$iv_ruleRefDEntity.current; }
	EOF;

// Rule RefDEntity
ruleRefDEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRefDEntityRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getRefDEntityAccess().getRefDEntityDataEntityCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getRefDEntityAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRefDEntityRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getRefDEntityAccess().getRefDEntityDataEntityCrossReference_1_1_0());
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleActor
entryRuleActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActorRule()); }
	iv_ruleActor=ruleActor
	{ $current=$iv_ruleActor.current; }
	EOF;

// Rule Actor
ruleActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='actor'
		{
			newLeafNode(otherlv_0, grammarAccess.getActorAccess().getActorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getActorAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActorAccess().getTypeActorTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleActorType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.rslingo.rsl.Rsl.ActorType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getActorAccess().getLeftSquareBracketKeyword_4());
		}
		(
			otherlv_5='name'
			{
				newLeafNode(otherlv_5, grammarAccess.getActorAccess().getNameKeyword_5_0());
			}
			(
				(
					lv_nameAlias_6_0=RULE_STRING
					{
						newLeafNode(lv_nameAlias_6_0, grammarAccess.getActorAccess().getNameAliasSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActorRule());
						}
						setWithLastConsumed(
							$current,
							"nameAlias",
							lv_nameAlias_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		(
			otherlv_7='isA'
			{
				newLeafNode(otherlv_7, grammarAccess.getActorAccess().getIsAKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActorRule());
						}
					}
					otherlv_8=RULE_ID
					{
						newLeafNode(otherlv_8, grammarAccess.getActorAccess().getSuperActorCrossReference_6_1_0());
					}
				)
			)
		)?
		(
			otherlv_9='description'
			{
				newLeafNode(otherlv_9, grammarAccess.getActorAccess().getDescriptionKeyword_7_0());
			}
			(
				(
					lv_description_10_0=RULE_STRING
					{
						newLeafNode(lv_description_10_0, grammarAccess.getActorAccess().getDescriptionSTRINGTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActorRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_10_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_11=']'
		{
			newLeafNode(otherlv_11, grammarAccess.getActorAccess().getRightSquareBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleRequirement
entryRuleRequirement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequirementRule()); }
	iv_ruleRequirement=ruleRequirement
	{ $current=$iv_ruleRequirement.current; }
	EOF;

// Rule Requirement
ruleRequirement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getRequirementAccess().getSystemRequirementParserRuleCall());
	}
	this_SystemRequirement_0=ruleSystemRequirement
	{
		$current = $this_SystemRequirement_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleSystemRequirement
entryRuleSystemRequirement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemRequirementRule()); }
	iv_ruleSystemRequirement=ruleSystemRequirement
	{ $current=$iv_ruleSystemRequirement.current; }
	EOF;

// Rule SystemRequirement
ruleSystemRequirement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getSystemRequirementAccess().getUseCaseParserRuleCall());
	}
	this_UseCase_0=ruleUseCase
	{
		$current = $this_UseCase_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleRequirementRelation
entryRuleRequirementRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequirementRelationRule()); }
	iv_ruleRequirementRelation=ruleRequirementRelation
	{ $current=$iv_ruleRequirementRelation.current; }
	EOF;

// Rule RequirementRelation
ruleRequirementRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='requirementRelation'
		{
			newLeafNode(otherlv_0, grammarAccess.getRequirementRelationAccess().getRequirementRelationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRequirementRelationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRequirementRelationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getRequirementRelationAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRequirementRelationAccess().getTypeRequirementRelationTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleRequirementRelationType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequirementRelationRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.rslingo.rsl.Rsl.RequirementRelationType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getRequirementRelationAccess().getLeftSquareBracketKeyword_4());
		}
		otherlv_5='source'
		{
			newLeafNode(otherlv_5, grammarAccess.getRequirementRelationAccess().getSourceKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRequirementRelationRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getRequirementRelationAccess().getSourceRequirementCrossReference_6_0());
				}
			)
		)
		otherlv_7='target'
		{
			newLeafNode(otherlv_7, grammarAccess.getRequirementRelationAccess().getTargetKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRequirementRelationRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getRequirementRelationAccess().getTargetRequirementCrossReference_8_0());
				}
			)
		)
		(
			otherlv_9='description'
			{
				newLeafNode(otherlv_9, grammarAccess.getRequirementRelationAccess().getDescriptionKeyword_9_0());
			}
			(
				(
					lv_description_10_0=RULE_STRING
					{
						newLeafNode(lv_description_10_0, grammarAccess.getRequirementRelationAccess().getDescriptionSTRINGTerminalRuleCall_9_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRequirementRelationRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_10_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_11=']'
		{
			newLeafNode(otherlv_11, grammarAccess.getRequirementRelationAccess().getRightSquareBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleUseCase
entryRuleUseCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUseCaseRule()); }
	iv_ruleUseCase=ruleUseCase
	{ $current=$iv_ruleUseCase.current; }
	EOF;

// Rule UseCase
ruleUseCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='useCase'
		{
			newLeafNode(otherlv_0, grammarAccess.getUseCaseAccess().getUseCaseKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getUseCaseAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUseCaseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getUseCaseAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getTypeUseCaseTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleUseCaseType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.rslingo.rsl.Rsl.UseCaseType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getUseCaseAccess().getLeftSquareBracketKeyword_4());
		}
		(
			otherlv_5='name'
			{
				newLeafNode(otherlv_5, grammarAccess.getUseCaseAccess().getNameKeyword_5_0());
			}
			(
				(
					lv_nameAlias_6_0=RULE_STRING
					{
						newLeafNode(lv_nameAlias_6_0, grammarAccess.getUseCaseAccess().getNameAliasSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUseCaseRule());
						}
						setWithLastConsumed(
							$current,
							"nameAlias",
							lv_nameAlias_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		(
			otherlv_7='actorInitiates'
			{
				newLeafNode(otherlv_7, grammarAccess.getUseCaseAccess().getActorInitiatesKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUseCaseRule());
						}
					}
					otherlv_8=RULE_ID
					{
						newLeafNode(otherlv_8, grammarAccess.getUseCaseAccess().getActorInitiatesActorCrossReference_6_1_0());
					}
				)
			)
		)
		(
			otherlv_9='actorParticipates'
			{
				newLeafNode(otherlv_9, grammarAccess.getUseCaseAccess().getActorParticipatesKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUseCaseAccess().getActorParticipatesRefActorParserRuleCall_7_1_0());
					}
					lv_actorParticipates_10_0=ruleRefActor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUseCaseRule());
						}
						add(
							$current,
							"actorParticipates",
							lv_actorParticipates_10_0,
							"org.rslingo.rsl.Rsl.RefActor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_11='dataEntityView'
			{
				newLeafNode(otherlv_11, grammarAccess.getUseCaseAccess().getDataEntityViewKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUseCaseRule());
						}
					}
					otherlv_12=RULE_ID
					{
						newLeafNode(otherlv_12, grammarAccess.getUseCaseAccess().getDEntityViewDataEntityViewCrossReference_8_1_0());
					}
				)
			)
		)?
		(
			otherlv_13='precondition'
			{
				newLeafNode(otherlv_13, grammarAccess.getUseCaseAccess().getPreconditionKeyword_9_0());
			}
			(
				(
					lv_precondition_14_0=RULE_STRING
					{
						newLeafNode(lv_precondition_14_0, grammarAccess.getUseCaseAccess().getPreconditionSTRINGTerminalRuleCall_9_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUseCaseRule());
						}
						setWithLastConsumed(
							$current,
							"precondition",
							lv_precondition_14_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_15='postcondition'
			{
				newLeafNode(otherlv_15, grammarAccess.getUseCaseAccess().getPostconditionKeyword_10_0());
			}
			(
				(
					lv_postcondition_16_0=RULE_STRING
					{
						newLeafNode(lv_postcondition_16_0, grammarAccess.getUseCaseAccess().getPostconditionSTRINGTerminalRuleCall_10_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUseCaseRule());
						}
						setWithLastConsumed(
							$current,
							"postcondition",
							lv_postcondition_16_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getActionsUCActionsParserRuleCall_11_0());
				}
				lv_actions_17_0=ruleUCActions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					set(
						$current,
						"actions",
						lv_actions_17_0,
						"org.rslingo.rsl.Rsl.UCActions");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getExtensionPointsUCExtensionPointsParserRuleCall_12_0());
				}
				lv_extensionPoints_18_0=ruleUCExtensionPoints
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					set(
						$current,
						"extensionPoints",
						lv_extensionPoints_18_0,
						"org.rslingo.rsl.Rsl.UCExtensionPoints");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getIncludesUCIncludesParserRuleCall_13_0());
				}
				lv_includes_19_0=ruleUCIncludes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					set(
						$current,
						"includes",
						lv_includes_19_0,
						"org.rslingo.rsl.Rsl.UCIncludes");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getExtendsUCExtendsParserRuleCall_14_0());
				}
				lv_extends_20_0=ruleUCExtends
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					add(
						$current,
						"extends",
						lv_extends_20_0,
						"org.rslingo.rsl.Rsl.UCExtends");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_21='priority'
			{
				newLeafNode(otherlv_21, grammarAccess.getUseCaseAccess().getPriorityKeyword_15_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUseCaseAccess().getPriorityPriorityTypeEnumRuleCall_15_1_0());
					}
					lv_priority_22_0=rulePriorityType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUseCaseRule());
						}
						set(
							$current,
							"priority",
							lv_priority_22_0,
							"org.rslingo.rsl.Rsl.PriorityType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_23='description'
			{
				newLeafNode(otherlv_23, grammarAccess.getUseCaseAccess().getDescriptionKeyword_16_0());
			}
			(
				(
					lv_description_24_0=RULE_STRING
					{
						newLeafNode(lv_description_24_0, grammarAccess.getUseCaseAccess().getDescriptionSTRINGTerminalRuleCall_16_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUseCaseRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_24_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getScenariosScenarioParserRuleCall_17_0());
				}
				lv_scenarios_25_0=ruleScenario
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					add(
						$current,
						"scenarios",
						lv_scenarios_25_0,
						"org.rslingo.rsl.Rsl.Scenario");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_26=']'
		{
			newLeafNode(otherlv_26, grammarAccess.getUseCaseAccess().getRightSquareBracketKeyword_18());
		}
	)
;

// Entry rule entryRuleRefActor
entryRuleRefActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefActorRule()); }
	iv_ruleRefActor=ruleRefActor
	{ $current=$iv_ruleRefActor.current; }
	EOF;

// Rule RefActor
ruleRefActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRefActorRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getRefActorAccess().getRefsActorCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getRefActorAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRefActorRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getRefActorAccess().getRefsActorCrossReference_1_1_0());
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleUCActions
entryRuleUCActions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUCActionsRule()); }
	iv_ruleUCActions=ruleUCActions
	{ $current=$iv_ruleUCActions.current; }
	EOF;

// Rule UCActions
ruleUCActions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='actions'
		{
			newLeafNode(otherlv_0, grammarAccess.getUCActionsAccess().getActionsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUCActionsAccess().getActionsUCActionParserRuleCall_1_0());
				}
				lv_actions_1_0=ruleUCAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUCActionsRule());
					}
					add(
						$current,
						"actions",
						lv_actions_1_0,
						"org.rslingo.rsl.Rsl.UCAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getUCActionsAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUCActionsAccess().getActionsUCActionParserRuleCall_2_1_0());
					}
					lv_actions_3_0=ruleUCAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUCActionsRule());
						}
						add(
							$current,
							"actions",
							lv_actions_3_0,
							"org.rslingo.rsl.Rsl.UCAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleUCAction
entryRuleUCAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUCActionRule()); }
	iv_ruleUCAction=ruleUCAction
	{ $current=$iv_ruleUCAction.current; }
	EOF;

// Rule UCAction
ruleUCAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getUCActionAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUCActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getUCActionAccess().getLeftSquareBracketKeyword_1_0());
			}
			otherlv_2='description'
			{
				newLeafNode(otherlv_2, grammarAccess.getUCActionAccess().getDescriptionKeyword_1_1());
			}
			(
				(
					lv_description_3_0=RULE_STRING
					{
						newLeafNode(lv_description_3_0, grammarAccess.getUCActionAccess().getDescriptionSTRINGTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUCActionRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getUCActionAccess().getRightSquareBracketKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRuleUCIncludes
entryRuleUCIncludes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUCIncludesRule()); }
	iv_ruleUCIncludes=ruleUCIncludes
	{ $current=$iv_ruleUCIncludes.current; }
	EOF;

// Rule UCIncludes
ruleUCIncludes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='includes'
		{
			newLeafNode(otherlv_0, grammarAccess.getUCIncludesAccess().getIncludesKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUCIncludesAccess().getIncludesRefUCParserRuleCall_1_0());
				}
				lv_includes_1_0=ruleRefUC
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUCIncludesRule());
					}
					add(
						$current,
						"includes",
						lv_includes_1_0,
						"org.rslingo.rsl.Rsl.RefUC");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUCExtends
entryRuleUCExtends returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUCExtendsRule()); }
	iv_ruleUCExtends=ruleUCExtends
	{ $current=$iv_ruleUCExtends.current; }
	EOF;

// Rule UCExtends
ruleUCExtends returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extends'
		{
			newLeafNode(otherlv_0, grammarAccess.getUCExtendsAccess().getExtendsKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUCExtendsRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getUCExtendsAccess().getUsecaseUseCaseCrossReference_1_0());
				}
			)
		)
		otherlv_2='onExtensionPoint'
		{
			newLeafNode(otherlv_2, grammarAccess.getUCExtendsAccess().getOnExtensionPointKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUCExtendsRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getUCExtendsAccess().getExtensionPointUCExtensionPointCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUCExtensionPoints
entryRuleUCExtensionPoints returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUCExtensionPointsRule()); }
	iv_ruleUCExtensionPoints=ruleUCExtensionPoints
	{ $current=$iv_ruleUCExtensionPoints.current; }
	EOF;

// Rule UCExtensionPoints
ruleUCExtensionPoints returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extensionPoints'
		{
			newLeafNode(otherlv_0, grammarAccess.getUCExtensionPointsAccess().getExtensionPointsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUCExtensionPointsAccess().getExtensionPointsUCExtensionPointParserRuleCall_1_0());
				}
				lv_extensionPoints_1_0=ruleUCExtensionPoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUCExtensionPointsRule());
					}
					add(
						$current,
						"extensionPoints",
						lv_extensionPoints_1_0,
						"org.rslingo.rsl.Rsl.UCExtensionPoint");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getUCExtensionPointsAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUCExtensionPointsAccess().getExtensionPointsUCExtensionPointParserRuleCall_2_1_0());
					}
					lv_extensionPoints_3_0=ruleUCExtensionPoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUCExtensionPointsRule());
						}
						add(
							$current,
							"extensionPoints",
							lv_extensionPoints_3_0,
							"org.rslingo.rsl.Rsl.UCExtensionPoint");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleUCExtensionPoint
entryRuleUCExtensionPoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUCExtensionPointRule()); }
	iv_ruleUCExtensionPoint=ruleUCExtensionPoint
	{ $current=$iv_ruleUCExtensionPoint.current; }
	EOF;

// Rule UCExtensionPoint
ruleUCExtensionPoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getUCExtensionPointAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUCExtensionPointRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getUCExtensionPointAccess().getLeftSquareBracketKeyword_1_0());
			}
			otherlv_2='description'
			{
				newLeafNode(otherlv_2, grammarAccess.getUCExtensionPointAccess().getDescriptionKeyword_1_1());
			}
			(
				(
					lv_description_3_0=RULE_STRING
					{
						newLeafNode(lv_description_3_0, grammarAccess.getUCExtensionPointAccess().getDescriptionSTRINGTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUCExtensionPointRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getUCExtensionPointAccess().getRightSquareBracketKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRuleRefUC
entryRuleRefUC returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefUCRule()); }
	iv_ruleRefUC=ruleRefUC
	{ $current=$iv_ruleRefUC.current; }
	EOF;

// Rule RefUC
ruleRefUC returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRefUCRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getRefUCAccess().getRefsUseCaseCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getRefUCAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRefUCRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getRefUCAccess().getRefsUseCaseCrossReference_1_1_0());
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleScenario
entryRuleScenario returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScenarioRule()); }
	iv_ruleScenario=ruleScenario
	{ $current=$iv_ruleScenario.current; }
	EOF;

// Rule Scenario
ruleScenario returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='scenario'
		{
			newLeafNode(otherlv_0, grammarAccess.getScenarioAccess().getScenarioKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getScenarioAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScenarioRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getScenarioAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioAccess().getTypeScenarioTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleScenarioType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.rslingo.rsl.Rsl.ScenarioType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getScenarioAccess().getLeftSquareBracketKeyword_4());
		}
		(
			otherlv_5='name'
			{
				newLeafNode(otherlv_5, grammarAccess.getScenarioAccess().getNameKeyword_5_0());
			}
			(
				(
					lv_nameAlias_6_0=RULE_STRING
					{
						newLeafNode(lv_nameAlias_6_0, grammarAccess.getScenarioAccess().getNameAliasSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getScenarioRule());
						}
						setWithLastConsumed(
							$current,
							"nameAlias",
							lv_nameAlias_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		(
			otherlv_7='executionMode'
			{
				newLeafNode(otherlv_7, grammarAccess.getScenarioAccess().getExecutionModeKeyword_6_0());
			}
			(
				(
					(
						lv_mode_8_1='Sequential'
						{
							newLeafNode(lv_mode_8_1, grammarAccess.getScenarioAccess().getModeSequentialKeyword_6_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getScenarioRule());
							}
							setWithLastConsumed($current, "mode", lv_mode_8_1, null);
						}
						    |
						lv_mode_8_2='Parallel'
						{
							newLeafNode(lv_mode_8_2, grammarAccess.getScenarioAccess().getModeParallelKeyword_6_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getScenarioRule());
							}
							setWithLastConsumed($current, "mode", lv_mode_8_2, null);
						}
					)
				)
			)
		)?
		(
			otherlv_9='description'
			{
				newLeafNode(otherlv_9, grammarAccess.getScenarioAccess().getDescriptionKeyword_7_0());
			}
			(
				(
					lv_description_10_0=RULE_STRING
					{
						newLeafNode(lv_description_10_0, grammarAccess.getScenarioAccess().getDescriptionSTRINGTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getScenarioRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_10_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioAccess().getStepsStepParserRuleCall_8_0());
				}
				lv_steps_11_0=ruleStep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioRule());
					}
					add(
						$current,
						"steps",
						lv_steps_11_0,
						"org.rslingo.rsl.Rsl.Step");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_12=']'
		{
			newLeafNode(otherlv_12, grammarAccess.getScenarioAccess().getRightSquareBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleStep
entryRuleStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepRule()); }
	iv_ruleStep=ruleStep
	{ $current=$iv_ruleStep.current; }
	EOF;

// Rule Step
ruleStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='step'
		{
			newLeafNode(otherlv_0, grammarAccess.getStepAccess().getStepKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStepAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStepRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getStepAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStepAccess().getTypeStepOperationTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleStepOperationType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStepRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.rslingo.rsl.Rsl.StepOperationType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getStepAccess().getColonKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStepAccess().getSubTypeStepOperationSubTypeEnumRuleCall_4_1_0());
					}
					lv_subType_5_0=ruleStepOperationSubType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStepRule());
						}
						set(
							$current,
							"subType",
							lv_subType_5_0,
							"org.rslingo.rsl.Rsl.StepOperationSubType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='['
		{
			newLeafNode(otherlv_6, grammarAccess.getStepAccess().getLeftSquareBracketKeyword_5());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStepAccess().getSimpleStepSimpleStepParserRuleCall_6_0_0());
					}
					lv_simpleStep_7_0=ruleSimpleStep
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStepRule());
						}
						set(
							$current,
							"simpleStep",
							lv_simpleStep_7_0,
							"org.rslingo.rsl.Rsl.SimpleStep");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStepAccess().getSubStepsStepParserRuleCall_6_1_0());
					}
					lv_subSteps_8_0=ruleStep
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStepRule());
						}
						add(
							$current,
							"subSteps",
							lv_subSteps_8_0,
							"org.rslingo.rsl.Rsl.Step");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStepAccess().getIfStepsIfStepParserRuleCall_6_2_0());
					}
					lv_ifSteps_9_0=ruleIfStep
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStepRule());
						}
						add(
							$current,
							"ifSteps",
							lv_ifSteps_9_0,
							"org.rslingo.rsl.Rsl.IfStep");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
		otherlv_10=']'
		{
			newLeafNode(otherlv_10, grammarAccess.getStepAccess().getRightSquareBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleSimpleStep
entryRuleSimpleStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleStepRule()); }
	iv_ruleSimpleStep=ruleSimpleStep
	{ $current=$iv_ruleSimpleStep.current; }
	EOF;

// Rule SimpleStep
ruleSimpleStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_nameAlias_0_0=RULE_STRING
				{
					newLeafNode(lv_nameAlias_0_0, grammarAccess.getSimpleStepAccess().getNameAliasSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleStepRule());
					}
					setWithLastConsumed(
						$current,
						"nameAlias",
						lv_nameAlias_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_1='actor'
			{
				newLeafNode(otherlv_1, grammarAccess.getSimpleStepAccess().getActorKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleStepRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getSimpleStepAccess().getActorActorCrossReference_1_1_0());
					}
				)
			)
		)?
		(
			otherlv_3='description'
			{
				newLeafNode(otherlv_3, grammarAccess.getSimpleStepAccess().getDescriptionKeyword_2_0());
			}
			(
				(
					lv_description_4_0=RULE_STRING
					{
						newLeafNode(lv_description_4_0, grammarAccess.getSimpleStepAccess().getDescriptionSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleStepRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_5='precondition'
			{
				newLeafNode(otherlv_5, grammarAccess.getSimpleStepAccess().getPreconditionKeyword_3_0());
			}
			(
				(
					lv_precondition_6_0=RULE_STRING
					{
						newLeafNode(lv_precondition_6_0, grammarAccess.getSimpleStepAccess().getPreconditionSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleStepRule());
						}
						setWithLastConsumed(
							$current,
							"precondition",
							lv_precondition_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_7='postcondition'
			{
				newLeafNode(otherlv_7, grammarAccess.getSimpleStepAccess().getPostconditionKeyword_4_0());
			}
			(
				(
					lv_postcondition_8_0=RULE_STRING
					{
						newLeafNode(lv_postcondition_8_0, grammarAccess.getSimpleStepAccess().getPostconditionSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleStepRule());
						}
						setWithLastConsumed(
							$current,
							"postcondition",
							lv_postcondition_8_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_9='nextStep'
			{
				newLeafNode(otherlv_9, grammarAccess.getSimpleStepAccess().getNextStepKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleStepRule());
						}
					}
					otherlv_10=RULE_ID
					{
						newLeafNode(otherlv_10, grammarAccess.getSimpleStepAccess().getNextStepCrossReference_5_1_0());
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleIfStep
entryRuleIfStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStepRule()); }
	iv_ruleIfStep=ruleIfStep
	{ $current=$iv_ruleIfStep.current; }
	EOF;

// Rule IfStep
ruleIfStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='ifAction'
			{
				newLeafNode(otherlv_0, grammarAccess.getIfStepAccess().getIfActionKeyword_0_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIfStepRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getIfStepAccess().getActionUCActionCrossReference_0_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getIfStepAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStepAccess().getStepsStepParserRuleCall_2_0());
				}
				lv_steps_3_0=ruleStep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStepRule());
					}
					add(
						$current,
						"steps",
						lv_steps_3_0,
						"org.rslingo.rsl.Rsl.Step");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getIfStepAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleStateMachine
entryRuleStateMachine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateMachineRule()); }
	iv_ruleStateMachine=ruleStateMachine
	{ $current=$iv_ruleStateMachine.current; }
	EOF;

// Rule StateMachine
ruleStateMachine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='stateMachine'
		{
			newLeafNode(otherlv_0, grammarAccess.getStateMachineAccess().getStateMachineKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStateMachineAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateMachineRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getStateMachineAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStateMachineAccess().getTypeStateMachineTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleStateMachineType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateMachineRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.rslingo.rsl.Rsl.StateMachineType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getStateMachineAccess().getLeftSquareBracketKeyword_4());
		}
		otherlv_5='name'
		{
			newLeafNode(otherlv_5, grammarAccess.getStateMachineAccess().getNameKeyword_5());
		}
		(
			(
				lv_nameAlias_6_0=RULE_STRING
				{
					newLeafNode(lv_nameAlias_6_0, grammarAccess.getStateMachineAccess().getNameAliasSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateMachineRule());
					}
					setWithLastConsumed(
						$current,
						"nameAlias",
						lv_nameAlias_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='dataEntity'
		{
			newLeafNode(otherlv_7, grammarAccess.getStateMachineAccess().getDataEntityKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateMachineRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getStateMachineAccess().getEntityDataEntityCrossReference_8_0());
				}
			)
		)
		(
			otherlv_9='description'
			{
				newLeafNode(otherlv_9, grammarAccess.getStateMachineAccess().getDescriptionKeyword_9_0());
			}
			(
				(
					lv_description_10_0=RULE_STRING
					{
						newLeafNode(lv_description_10_0, grammarAccess.getStateMachineAccess().getDescriptionSTRINGTerminalRuleCall_9_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStateMachineRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_10_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getStateMachineAccess().getStatesStatesParserRuleCall_10_0());
				}
				lv_states_11_0=ruleStates
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateMachineRule());
					}
					set(
						$current,
						"states",
						lv_states_11_0,
						"org.rslingo.rsl.Rsl.States");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12=']'
		{
			newLeafNode(otherlv_12, grammarAccess.getStateMachineAccess().getRightSquareBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleStates
entryRuleStates returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatesRule()); }
	iv_ruleStates=ruleStates
	{ $current=$iv_ruleStates.current; }
	EOF;

// Rule States
ruleStates returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStatesAccess().getStateAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStatesAccess().getStatesStateParserRuleCall_1_0());
				}
				lv_states_1_0=ruleState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatesRule());
					}
					add(
						$current,
						"states",
						lv_states_1_0,
						"org.rslingo.rsl.Rsl.State");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='state'
		{
			newLeafNode(otherlv_0, grammarAccess.getStateAccess().getStateKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_isInitial_2_0='isInitial'
				{
					newLeafNode(lv_isInitial_2_0, grammarAccess.getStateAccess().getIsInitialIsInitialKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed($current, "isInitial", true, "isInitial");
				}
			)
		)?
		(
			(
				lv_isFinal_3_0='isFinal'
				{
					newLeafNode(lv_isFinal_3_0, grammarAccess.getStateAccess().getIsFinalIsFinalKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed($current, "isFinal", true, "isFinal");
				}
			)
		)?
		(
			otherlv_4='onEntry'
			{
				newLeafNode(otherlv_4, grammarAccess.getStateAccess().getOnEntryKeyword_4_0());
			}
			(
				(
					lv_onEntry_5_0=RULE_STRING
					{
						newLeafNode(lv_onEntry_5_0, grammarAccess.getStateAccess().getOnEntrySTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStateRule());
						}
						setWithLastConsumed(
							$current,
							"onEntry",
							lv_onEntry_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_6='onExit'
			{
				newLeafNode(otherlv_6, grammarAccess.getStateAccess().getOnExitKeyword_5_0());
			}
			(
				(
					lv_onExit_7_0=RULE_STRING
					{
						newLeafNode(lv_onExit_7_0, grammarAccess.getStateAccess().getOnExitSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStateRule());
						}
						setWithLastConsumed(
							$current,
							"onExit",
							lv_onExit_7_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_8=':'
			{
				newLeafNode(otherlv_8, grammarAccess.getStateAccess().getColonKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStateAccess().getActionsRefUCActionParserRuleCall_6_1_0());
					}
					lv_actions_9_0=ruleRefUCAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStateRule());
						}
						add(
							$current,
							"actions",
							lv_actions_9_0,
							"org.rslingo.rsl.Rsl.RefUCAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getStateAccess().getActionsRefUCActionParserRuleCall_7_0());
				}
				lv_actions_10_0=ruleRefUCAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateRule());
					}
					add(
						$current,
						"actions",
						lv_actions_10_0,
						"org.rslingo.rsl.Rsl.RefUCAction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleRefUCAction
entryRuleRefUCAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefUCActionRule()); }
	iv_ruleRefUCAction=ruleRefUCAction
	{ $current=$iv_ruleRefUCAction.current; }
	EOF;

// Rule RefUCAction
ruleRefUCAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='useCaseAction'
		{
			newLeafNode(otherlv_0, grammarAccess.getRefUCActionAccess().getUseCaseActionKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRefUCActionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRefUCActionAccess().getActionUCActionCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='nextState'
			{
				newLeafNode(otherlv_2, grammarAccess.getRefUCActionAccess().getNextStateKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRefUCActionRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getRefUCActionAccess().getNextstateStateCrossReference_2_1_0());
					}
				)
			)
		)?
	)
;

// Rule SystemType
ruleSystemType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='System'
			{
				$current = grammarAccess.getSystemTypeAccess().getSystemEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSystemTypeAccess().getSystemEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='SubSystem'
			{
				$current = grammarAccess.getSystemTypeAccess().getSubSystemEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSystemTypeAccess().getSubSystemEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='ReusableSystem'
			{
				$current = grammarAccess.getSystemTypeAccess().getReusableSystemEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getSystemTypeAccess().getReusableSystemEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Application'
			{
				$current = grammarAccess.getSystemTypeAccess().getApplicationEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getSystemTypeAccess().getApplicationEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Other'
			{
				$current = grammarAccess.getSystemTypeAccess().getOtherEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getSystemTypeAccess().getOtherEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule SystemScope
ruleSystemScope returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='In'
			{
				$current = grammarAccess.getSystemScopeAccess().getInEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSystemScopeAccess().getInEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Out'
			{
				$current = grammarAccess.getSystemScopeAccess().getOutEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSystemScopeAccess().getOutEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule SystemRelationType
ruleSystemRelationType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Requires'
			{
				$current = grammarAccess.getSystemRelationTypeAccess().getRequiresEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSystemRelationTypeAccess().getRequiresEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Supports'
			{
				$current = grammarAccess.getSystemRelationTypeAccess().getSupportsEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSystemRelationTypeAccess().getSupportsEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Obstructs'
			{
				$current = grammarAccess.getSystemRelationTypeAccess().getObstructsEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getSystemRelationTypeAccess().getObstructsEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Conflicts'
			{
				$current = grammarAccess.getSystemRelationTypeAccess().getConflictsEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getSystemRelationTypeAccess().getConflictsEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Identical'
			{
				$current = grammarAccess.getSystemRelationTypeAccess().getIdenticalEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getSystemRelationTypeAccess().getIdenticalEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='Relates'
			{
				$current = grammarAccess.getSystemRelationTypeAccess().getRelatesEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getSystemRelationTypeAccess().getRelatesEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='Other'
			{
				$current = grammarAccess.getSystemRelationTypeAccess().getOtherEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getSystemRelationTypeAccess().getOtherEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule SystemRelationCategory
ruleSystemRelationCategory returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Import'
			{
				$current = grammarAccess.getSystemRelationCategoryAccess().getImportEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSystemRelationCategoryAccess().getImportEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Export'
			{
				$current = grammarAccess.getSystemRelationCategoryAccess().getExportEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSystemRelationCategoryAccess().getExportEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='ImportExport'
			{
				$current = grammarAccess.getSystemRelationCategoryAccess().getImportExportEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getSystemRelationCategoryAccess().getImportExportEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Sync'
			{
				$current = grammarAccess.getSystemRelationCategoryAccess().getSyncEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getSystemRelationCategoryAccess().getSyncEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Interact'
			{
				$current = grammarAccess.getSystemRelationCategoryAccess().getInteractEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getSystemRelationCategoryAccess().getInteractEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='Other'
			{
				$current = grammarAccess.getSystemRelationCategoryAccess().getOtherEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getSystemRelationCategoryAccess().getOtherEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule DataEntityType
ruleDataEntityType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Principal'
			{
				$current = grammarAccess.getDataEntityTypeAccess().getPrincipalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataEntityTypeAccess().getPrincipalEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Secondary'
			{
				$current = grammarAccess.getDataEntityTypeAccess().getSecondaryEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataEntityTypeAccess().getSecondaryEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule DataEntitySubType
ruleDataEntitySubType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Simple'
			{
				$current = grammarAccess.getDataEntitySubTypeAccess().getSimpleEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataEntitySubTypeAccess().getSimpleEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Complex'
			{
				$current = grammarAccess.getDataEntitySubTypeAccess().getComplexEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataEntitySubTypeAccess().getComplexEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule AttributeType
ruleAttributeType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Integer'
			{
				$current = grammarAccess.getAttributeTypeAccess().getIntegerEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAttributeTypeAccess().getIntegerEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Double'
			{
				$current = grammarAccess.getAttributeTypeAccess().getDoubleEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAttributeTypeAccess().getDoubleEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Decimal'
			{
				$current = grammarAccess.getAttributeTypeAccess().getDecimalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAttributeTypeAccess().getDecimalEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Boolean'
			{
				$current = grammarAccess.getAttributeTypeAccess().getBooleanEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getAttributeTypeAccess().getBooleanEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Bit'
			{
				$current = grammarAccess.getAttributeTypeAccess().getBitEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getAttributeTypeAccess().getBitEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='Currency'
			{
				$current = grammarAccess.getAttributeTypeAccess().getCurrencyEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getAttributeTypeAccess().getCurrencyEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='Date'
			{
				$current = grammarAccess.getAttributeTypeAccess().getDateEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getAttributeTypeAccess().getDateEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='Time'
			{
				$current = grammarAccess.getAttributeTypeAccess().getTimeEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getAttributeTypeAccess().getTimeEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='Datetime'
			{
				$current = grammarAccess.getAttributeTypeAccess().getDatetimeEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getAttributeTypeAccess().getDatetimeEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='String'
			{
				$current = grammarAccess.getAttributeTypeAccess().getStringEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getAttributeTypeAccess().getStringEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='Text'
			{
				$current = grammarAccess.getAttributeTypeAccess().getTextEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getAttributeTypeAccess().getTextEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='Regex'
			{
				$current = grammarAccess.getAttributeTypeAccess().getRegexEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getAttributeTypeAccess().getRegexEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='URL'
			{
				$current = grammarAccess.getAttributeTypeAccess().getURLEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getAttributeTypeAccess().getURLEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='Image'
			{
				$current = grammarAccess.getAttributeTypeAccess().getImageEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getAttributeTypeAccess().getImageEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='XML'
			{
				$current = grammarAccess.getAttributeTypeAccess().getXMLEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getAttributeTypeAccess().getXMLEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15='Binary'
			{
				$current = grammarAccess.getAttributeTypeAccess().getBinaryEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getAttributeTypeAccess().getBinaryEnumLiteralDeclaration_15());
			}
		)
	)
;

// Rule DataEntityViewType
ruleDataEntityViewType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='VerySimple'
			{
				$current = grammarAccess.getDataEntityViewTypeAccess().getVerySimpleEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataEntityViewTypeAccess().getVerySimpleEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Simple'
			{
				$current = grammarAccess.getDataEntityViewTypeAccess().getSimpleEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataEntityViewTypeAccess().getSimpleEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Complex'
			{
				$current = grammarAccess.getDataEntityViewTypeAccess().getComplexEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDataEntityViewTypeAccess().getComplexEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule ActorType
ruleActorType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='User'
			{
				$current = grammarAccess.getActorTypeAccess().getUserEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getActorTypeAccess().getUserEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='ExternalSystem'
			{
				$current = grammarAccess.getActorTypeAccess().getExternalSystemEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getActorTypeAccess().getExternalSystemEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Timer'
			{
				$current = grammarAccess.getActorTypeAccess().getTimerEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getActorTypeAccess().getTimerEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule PriorityType
rulePriorityType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Must'
			{
				$current = grammarAccess.getPriorityTypeAccess().getMustEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPriorityTypeAccess().getMustEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Should'
			{
				$current = grammarAccess.getPriorityTypeAccess().getShouldEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPriorityTypeAccess().getShouldEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Could'
			{
				$current = grammarAccess.getPriorityTypeAccess().getCouldEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPriorityTypeAccess().getCouldEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='WillNot'
			{
				$current = grammarAccess.getPriorityTypeAccess().getWillNotEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getPriorityTypeAccess().getWillNotEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule RequirementRelationType
ruleRequirementRelationType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Requires'
			{
				$current = grammarAccess.getRequirementRelationTypeAccess().getRequiresEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRequirementRelationTypeAccess().getRequiresEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Supports'
			{
				$current = grammarAccess.getRequirementRelationTypeAccess().getSupportsEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRequirementRelationTypeAccess().getSupportsEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Obstructs'
			{
				$current = grammarAccess.getRequirementRelationTypeAccess().getObstructsEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRequirementRelationTypeAccess().getObstructsEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Conflicts'
			{
				$current = grammarAccess.getRequirementRelationTypeAccess().getConflictsEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRequirementRelationTypeAccess().getConflictsEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Identical'
			{
				$current = grammarAccess.getRequirementRelationTypeAccess().getIdenticalEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getRequirementRelationTypeAccess().getIdenticalEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='Relates'
			{
				$current = grammarAccess.getRequirementRelationTypeAccess().getRelatesEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getRequirementRelationTypeAccess().getRelatesEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='Other'
			{
				$current = grammarAccess.getRequirementRelationTypeAccess().getOtherEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getRequirementRelationTypeAccess().getOtherEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule UseCaseType
ruleUseCaseType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='EntityCreate'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntityCreateEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getUseCaseTypeAccess().getEntityCreateEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='EntityRead'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntityReadEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getUseCaseTypeAccess().getEntityReadEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='EntityUpdate'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntityUpdateEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getUseCaseTypeAccess().getEntityUpdateEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='EntityDelete'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntityDeleteEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getUseCaseTypeAccess().getEntityDeleteEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='EntityReport'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntityReportEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getUseCaseTypeAccess().getEntityReportEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='EntityDashboard'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntityDashboardEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getUseCaseTypeAccess().getEntityDashboardEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='EntityOther'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntityOtherEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getUseCaseTypeAccess().getEntityOtherEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='EntitiesManage'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntitiesManageEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getUseCaseTypeAccess().getEntitiesManageEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='EntitiesBrowse'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntitiesBrowseEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getUseCaseTypeAccess().getEntitiesBrowseEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='EntitiesSearch'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntitiesSearchEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getUseCaseTypeAccess().getEntitiesSearchEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='EntitiesReport'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntitiesReportEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getUseCaseTypeAccess().getEntitiesReportEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='EntitiesDashboard'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntitiesDashboardEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getUseCaseTypeAccess().getEntitiesDashboardEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='EntitiesInteropImport'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntitiesInteropImportEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getUseCaseTypeAccess().getEntitiesInteropImportEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='EntitiesInteropExport'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntitiesInteropExportEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getUseCaseTypeAccess().getEntitiesInteropExportEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='EntitiesInteropSync'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntitiesInteropSyncEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getUseCaseTypeAccess().getEntitiesInteropSyncEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15='EntitiesInteropSendMessage'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntitiesInteropSendMessageEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getUseCaseTypeAccess().getEntitiesInteropSendMessageEnumLiteralDeclaration_15());
			}
		)
		    |
		(
			enumLiteral_16='EntitiesInteropServiceInvocation'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntitiesInteropServiceInvocationEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_16, grammarAccess.getUseCaseTypeAccess().getEntitiesInteropServiceInvocationEnumLiteralDeclaration_16());
			}
		)
		    |
		(
			enumLiteral_17='EntitiesMapShow'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntitiesMapShowEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_17, grammarAccess.getUseCaseTypeAccess().getEntitiesMapShowEnumLiteralDeclaration_17());
			}
		)
		    |
		(
			enumLiteral_18='EntitiesMapInteract'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntitiesMapInteractEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_18, grammarAccess.getUseCaseTypeAccess().getEntitiesMapInteractEnumLiteralDeclaration_18());
			}
		)
		    |
		(
			enumLiteral_19='EntitiesOther'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getEntitiesOtherEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_19, grammarAccess.getUseCaseTypeAccess().getEntitiesOtherEnumLiteralDeclaration_19());
			}
		)
		    |
		(
			enumLiteral_20='Other'
			{
				$current = grammarAccess.getUseCaseTypeAccess().getOtherEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_20, grammarAccess.getUseCaseTypeAccess().getOtherEnumLiteralDeclaration_20());
			}
		)
	)
;

// Rule ScenarioType
ruleScenarioType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Main'
			{
				$current = grammarAccess.getScenarioTypeAccess().getMainEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getScenarioTypeAccess().getMainEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Alternative'
			{
				$current = grammarAccess.getScenarioTypeAccess().getAlternativeEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getScenarioTypeAccess().getAlternativeEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Exception'
			{
				$current = grammarAccess.getScenarioTypeAccess().getExceptionEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getScenarioTypeAccess().getExceptionEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule StepOperationType
ruleStepOperationType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Actor_PrepareData'
			{
				$current = grammarAccess.getStepOperationTypeAccess().getActor_PrepareDataEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getStepOperationTypeAccess().getActor_PrepareDataEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Actor_CallSystem'
			{
				$current = grammarAccess.getStepOperationTypeAccess().getActor_CallSystemEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getStepOperationTypeAccess().getActor_CallSystemEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='System_Executes'
			{
				$current = grammarAccess.getStepOperationTypeAccess().getSystem_ExecutesEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getStepOperationTypeAccess().getSystem_ExecutesEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='System_ReturnResult'
			{
				$current = grammarAccess.getStepOperationTypeAccess().getSystem_ReturnResultEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getStepOperationTypeAccess().getSystem_ReturnResultEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Other'
			{
				$current = grammarAccess.getStepOperationTypeAccess().getOtherEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getStepOperationTypeAccess().getOtherEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='None'
			{
				$current = grammarAccess.getStepOperationTypeAccess().getNoneEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getStepOperationTypeAccess().getNoneEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule StepOperationSubType
ruleStepOperationSubType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='SubmitData'
			{
				$current = grammarAccess.getStepOperationSubTypeAccess().getSubmitDataEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getStepOperationSubTypeAccess().getSubmitDataEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='ShowData'
			{
				$current = grammarAccess.getStepOperationSubTypeAccess().getShowDataEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getStepOperationSubTypeAccess().getShowDataEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='CancelUseCase'
			{
				$current = grammarAccess.getStepOperationSubTypeAccess().getCancelUseCaseEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getStepOperationSubTypeAccess().getCancelUseCaseEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='TerminateUseCase'
			{
				$current = grammarAccess.getStepOperationSubTypeAccess().getTerminateUseCaseEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getStepOperationSubTypeAccess().getTerminateUseCaseEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Other'
			{
				$current = grammarAccess.getStepOperationSubTypeAccess().getOtherEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getStepOperationSubTypeAccess().getOtherEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule StateMachineType
ruleStateMachineType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Simple'
			{
				$current = grammarAccess.getStateMachineTypeAccess().getSimpleEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getStateMachineTypeAccess().getSimpleEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Complex'
			{
				$current = grammarAccess.getStateMachineTypeAccess().getComplexEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getStateMachineTypeAccess().getComplexEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
